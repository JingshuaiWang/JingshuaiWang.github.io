<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[report]]></title>
      <url>%2F2017%2F08%2F17%2Freport%2F</url>
      <content type="text"><![CDATA[储备的知识架构xCAT、GPFS、LSF、NIS、RSH、SSH、NFS、VIM、shell、IOZONE、NC、kickstart、DHCP、http、ftp、tftp、NTP、FHS 掌握的实战技能点 —— INSTALL OScmm端口安装linuxkickstart 分发操作系统xCAT 分发操作系统CD/USB 安装操作系统—— PHYSICAL安装 switch安装 PDU了解 PCI了解3100工作站（可为其安装windows操作系统并激活、安装SOL server数据库）了解3650机架式服务器了解刀箱以及刀片服务器、并会实施向GPFS集群中添加两台主机（物理环境下实施） 目前掌握的hpc架构I/O节点(GPFS/NFS)、MGT节点(xCAT)、账户节点(NIS)、job调度节点(LSF)、LOGIN节点(控制用户的登录) 等等节点以及交换机或其它普通节点 备注 LIM、PIM、RES、SBD、MBD – PIM(mbtachd\mbschd\sbachd)六大组件(license schdule\RTM\PAC\progress manager)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[python开源库推荐]]></title>
      <url>%2F2017%2F04%2F25%2Fpythonsource%2F</url>
      <content type="text"><![CDATA[环境管理 virtualenv - A tool to create isolated Python environments. virtualenvwrapper - A set of extensions to virtualenv. 包管理 pip - The Python package and dependency manager.Python Package Index 交互解释器 Jupyter Notebook (IPython) - A rich toolkit to help you make the most out of using Python interactively. 日期时间 arrow - Better dates &amp; times for Python. 下载器 you-get - A YouTube/Youku/Niconico video downloader written in Python 3. youtube-dl - A small command-line program to download videos from YouTube. HTTP requests - HTTP Requests for Humans™. grequests - requests + gevent for asynchronous HTTP requests. 数据库驱动 PyMongo - The official Python client for MongoDB. redis-py - The Redis Python Client. Peewee - A small, expressive ORM. python-sql - Write SQL queries pythonically. SQLAlchemy - The Python SQL Toolkit and Object Relational Mapper. awesome-sqlalchemy Web 框架 Django - The most popular web framework in Python. awesome-django Flask - A microframework for Python. awesome-flask Tornado - A Web framework and asynchronous networking library. 模板语言 Jinja2 - A modern and designer friendly templating language. 队列 celery - An asynchronous task queue/job queue based on distributed message passing. 搜索 elasticsearch-py - The official low-level Python client for Elasticsearch. elasticsearch-dsl-py - The official high-level Python client for Elasticsearch. 表单 WTForms - A flexible forms validation and rendering library. WTForms-JSON - A WTForms extension for JSON data handling. 数据校验 Schematics - Data Structure Validation. voluptuous - A Python data validation library. It is primarily intended for validating data coming into Python as JSON, YAML, etc. 管理面板 django-xadmin - Drop-in replacement of Django admin comes with lots of goodies. flask-admin - Simple and extensible administrative interface framework for Flask. 并发和并行 multiprocessing - (Python standard library) Process-based threading interface. threading - (Python standard library)Higher-level threading interface. eventlet - Asynchronous framework with WSGI support. gevent - A coroutine-based Python networking library that uses greenlet. WSGI服务器 gunicorn - Pre-forked, partly written in C. 加密 PyCrypto - The Python Cryptography Toolkit. 日志 Raven - The Python client for Sentry. Sentry - A realtime logging and aggregation server. 单元测试 nose - nose extends unittest. faker - A Python package that generates fake data. 代码检查 Flake8 - The modular source code checker: pep8, pyflakes and co. Pylint - A Fully customizable source code analyzer. 数据可视化 matplotlib - A Python 2D plotting library. 算法和设计模式 algorithms - A module of algorithms for Python. python-patterns - A collection of design patterns in Python. 参考资料[请用chrome浏览器打开链接]（https://www.ttlsa.com/python/recommended-python-open-source-library/）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[配置sublimeText]]></title>
      <url>%2F2017%2F04%2F16%2FsublimeText%2F</url>
      <content type="text"><![CDATA[安装package control安装方法 配置基础功能 AlignmentBracketHighlighterSidebarEnhancementsTerminal 前端开发 EmmetAutoprefixerHTML-CSS-JS Prettify python开发 SublimeTmplSublimeCodeIntel]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[配置chrome和Safari]]></title>
      <url>%2F2017%2F02%2F16%2Fgoogle%2F</url>
      <content type="text"><![CDATA[chrome是一款比较流行且对程序开发非常友善的浏览器。其扩展程序的使用、对于程序员开发更是事半功倍。 XPath helperJSONViewPoper BlockerMomentumChronoExtension ManagerProxy SwitchyOmega (Proxy SwitchySharp的升级版)划词翻译 safari浏览器是mac操作系统内置、响应速度快、轻量、 Translate1PasswordADBlock PlusYOUKUhtml5player 2.0 下载地址]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[在ubuntu上搭建ftp服务器]]></title>
      <url>%2F2016%2F10%2F22%2Fftp-ubuntu%2F</url>
      <content type="text"><![CDATA[安装vsftpdsudo apt-get install vsftpd 修改配置文件sudo vim /etc/vsftpd.conf 12345678910不允许匿名用户浏览和下载anonymous_enable=NO#接受本地用户local_enable=YES#允许上传write_enable=YES#用户只能访问限制的目录chroot_local_user=YES#允许匿名用户创建目录文件anon_mkdir_write_enable=YES]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[linux学习之旅]]></title>
      <url>%2F2016%2F10%2F03%2Flinux%2F</url>
      <content type="text"><![CDATA[linux基础 计算机启动顺序 主板 –&gt; bootloader –&gt; OS –&gt; APP GNU GNU is Not Unix 是免费自由的操作系统（Richard Stallman） GCC GNU Compiler Collection GNU编译器集合 Linux Linux is Not Unix 类unix内核（Linus Torvalds） linux的出现对GNU的影响 GNU开创了一些unix的外围软件如GCC等、但是没有自己的内核、linux的出现完美解决了这个问题 ubuntu linux的一个发行版本、是debian的后继分支ubuntu server + unity = ubuntu desktop 文件系统与分区 每个分区只有一个文件系统、选择mac安装ubuntu系统的话、不用考虑分区与文件系统问题、 tty TTY是TeleTYpe的一个缩写、电传打字机、通过串行线用打印机键盘阅读和发送信息的工具tty0 是虚拟终端的别名、tty1-tty6为虚拟终端 命令行提示符 提示在后面输入命令$ :普通用户# :超级用户~ :当前所在目录 时区CST:美国中部时区UTC:世界标准时区CEST:欧洲中部时区GMT:格林尼治时区、http协议中传送时间的变准时区 manual 命令使用手册 linux命令 linux命令 datehistoryclearwhich pwd lscd change directorycd .cd ..cd ~du disk usagedu -shcatcat -n syslogless -n sysloghead -n syslogtail -n syslogtouchmkdir -p one/two/threecp fileName newFileNamecp fileName ../cp *.txt ../mv fileName ../mv fileName newFileNamerm fileNamerm -rf dir (force recusion)sudo su 切换到root身份、ubuntu系统默认不让以root身份运行adduserpasswddeluserusermodchown userName fileName-rwxrwxrwx drw-r–rw-chmod u+rx file.txt创建别名alias ll=’ls -lh’ linux参数 -a all-l list-h humain readable-t timewhatis apt-get 配置终端 terminal配置文件 .bashrc.bash_profile.bash_profile需要登录才可配置无图形界面的终端、且会调用.bashrc、故配置了.bashrc文件、也相当于间接于配置了.bash_profile 包管理工具 ubuntu包管理工具 apt-get install gitapt-get autoremove gitapt-cache search gitapt-get upgrade #更新安装的软件apt-get update #更新apt-get这个工具 mac包管理工具 brew install gitbrew uninstall git]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[pyenv virtualenv 解决版本不兼容问题]]></title>
      <url>%2F2016%2F07%2F25%2FpyenvVirtualenv%2F</url>
      <content type="text"><![CDATA[virtualenv解决了一台电脑运行不同python版本的项目的问题、而pyenv集承了插件virtualenv、可直接通过pyenv来操作virtualenv。 1、virtualenv的安装安装Pyenv的时候有一个选项为eval &quot;$(pyenv virtualenv-init -)&quot;、选择此选项默认安装了pyenv-virtualenv,详细信息请移步到『配置mac这篇博文查看』 2、virtualenv的使用pyenv virtualenv 2.7.13 虚拟环境名称pyenv virtualenvspyenv activate 虚拟环境名称pyenv deactivatepyenv uninstall 虚拟环境名称 3、例123456789➜ ~ pyenv virtualenvs 2.7.13/envs/venv_django (created from /Users/wangjingshuai/.pyenv/versions/2.7.13) 2.7.13/envs/venv_scrapy (created from /Users/wangjingshuai/.pyenv/versions/2.7.13) venv_django (created from /Users/wangjingshuai/.pyenv/versions/2.7.13) venv_scrapy (created from /Users/wangjingshuai/.pyenv/versions/2.7.13)➜ ~ pyenv activate venv_djangopyenv-virtualenv: prompt changing will be removed from future release. configure `export PYENV_VIRTUALENV_DISABLE_PROMPT=1&apos; to simulate the behavior.(venv_django) ➜ ~ pyenv deactivate➜ ~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[re模块的基本使用]]></title>
      <url>%2F2016%2F07%2F22%2Fpython-re%2F</url>
      <content type="text"><![CDATA[python正则表达式（常用）1、匹配元字符 . 匹配任意除换行符”\n”以外的字符^ 匹配行首$ 匹配行尾\ 转义字符[] 字符集| 可选项\d 数字[0-9]\D 非数字\s 空白字符\S 非空白字符\w 单词字符\W 非单词字符() 分组字符 2、重复元字符 * 重复0次或者N次+ 重复1次或者N次? 重复0次或者N次{m,n} 至少m次、至多n次 3、正则表达式re模块基本使用12345678910111213141516171819202122232425262728In [190]: import reIn [191]: pattern = re.compile(r&quot;([a-z]+) ([a-z]+)&quot;,re.I)In [192]: m = pattern.match(&quot;Hello World&quot;)In [193]: print m&lt;_sre.SRE_Match object at 0x109a8dbe0&gt;In [194]: m.group(0)Out[194]: &apos;Hello World&apos;In [195]: m.group(1)Out[195]: &apos;Hello&apos;In [196]: m.group(2)Out[196]: &apos;World&apos;In [197]: m.groups()Out[197]: (&apos;Hello&apos;, &apos;World&apos;)In [198]: m.group(3)---------------------------------------------------------------------------IndexError Traceback (most recent call last)&lt;ipython-input-198-71a2c7935517&gt; in &lt;module&gt;()----&gt; 1 m.group(3)IndexError: no such group 4、waring 1、 除match方法外、还有search()、findall()、finditer()、split()、sub()等方法、其用法大致类似、2、 一般情况下会优先选用re.compile()方法、而不是直接匹配、这样做可以避免多次编译、提升效率。3、 注意、python的re模块的匹配格式属于贪婪模式]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[ssh协议链接两台不同的主机]]></title>
      <url>%2F2016%2F07%2F14%2Fssh%2F</url>
      <content type="text"><![CDATA[ssh详解 ssh全称为secure shell,意为安全的shellssh采用非对称加密加密私钥、对称加密加密明文、因对称加密的效率是非对称加密效率的100倍往上、 ubuntu配置成ssh服务器sudo apt-get install openssh-serversudo service ssh startsudo service ssh stop mac链接ubuntussh user@host ubuntu链接mac mac默认安装了openssh-server开源实现、在系统设置、共享中打开远程登录ssh user@host windows链接ubuntu 下载putty.exe并运行、根据提示填写ubuntu的ip地址与端口即可链接 windows链接mac 在mac系统设置打开远程登录、并运行putty.exe、根据提示填写ip地址和端口]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[配置vscode]]></title>
      <url>%2F2016%2F07%2F03%2Fvscode%2F</url>
      <content type="text"><![CDATA[基础开发插件Indenticator Visually highlights the current indent depth ESLint 统一代码风格、检测语法错误、 Annotator Annotate the Current File or the File Before the Commit etc 前端开发插件Beautity Beautify javascript, JSON, CSS, Sass, and HTML in Visual Studio Code. HTMLSnippets Type part of a snippet, press enter, and the snippet unfolds Path Intellisense Visual Studio Code plugin that autocompletes filenames. Auto rename tag Automatically rename paired HTML/XML tag, same as Visual Studio IDE does. open in browser you can open html pages with browsers you specified..option + B Markdown插件Auto-Open Markdown Preview This VS Code extension automatically shows Markdown preview whenever you open new Markdown filecmd + shift + v python插件Python An extension with rich support for the Python language (including Python 3.6)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[配置django开发框架]]></title>
      <url>%2F2016%2F06%2F01%2Fdjango%2F</url>
      <content type="text"><![CDATA[创建虚拟开发环境 安装pyenv brew为mac包管理工具、若是用Ubuntu系统、用apt-getbrew install pyenv 安装pyenv-virtual 2.1 &gt; brew install pyenv-virtual 2.2 &gt; echo &#39;eval &quot;$(pyenv virtualenv-init -)&quot;&#39; &gt;&gt; ~/.zshrc 创建virtualenvpyenv virtualenv 2.7.13 venv_django 列出所有python虚拟环境pyenv virtualenvs 激活python虚拟环境pyenv activate venv_django 安装django框架pip install django==1.8.2 安装django框架插件pip install celery==3.1.25 退出python虚拟环境pyenv deactivate venv_django 删除python虚拟环境pyenv uninstall venv_django 操作项目 创建项目django-admin startproject projectName 创建应用python manage.py startapp appName 配置settings.py` 初始化应用、模板、数据库、时区、语言、静态文件、中间件、 配置urls.py 创建模型类 注册模型类 生成迁移python manage.py makemigrations 执行迁移python manage.py migrate 运行django内置服务器python manage.py runserver]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[配置mac]]></title>
      <url>%2F2016%2F04%2F07%2Fmac%2F</url>
      <content type="text"><![CDATA[brewbrew是mac操作系统中包管理工具、等同于Linux系统中的apt-get、yum等 mac系统自带ruby需要gcc编译器支持（xcode集成）安装brew/usr/bin/ruby -e “$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)” 安装 brew caskbrew tap caskroom/cask pyenvpyenv是python多版本管理工具 安装pyenvbrew install pyenv安装python依赖brew install readline xz安装特定的python版本brew install 2.7.13 zsh终极shell 安装zshbrew isntall zsh iterm2终极终端 安装iterm2brew cask install iterm2 oh-my-zsh配置zsh 安装oh-my-zsh sh -c “$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)” If you come from bash you might have to change your $PATH. 有上述提示、证明系统只加载了.zshrc、而没有去加载.bashrc或者.bash_profileexport PATH=$HOME/bin:/usr/local/bin:$PATHsource $HOME/.bashrcsource $HOME/.bash_profile ipython交互式python 安装ipythonpip install ipython mysql常用关系型数据库 安装mysqlbrew install mysqlmysql.server startmysql.server stopmysql.server restart mongodb分布式文件存储的NoSQL数据库 安装mongodbbrew install mongodbmongodbuse admindb.shutdownServer()brew cask install robomongo redis内存级数据库存储、交互速度非常快、键值对形式存储brew install redisredis-serverredis-cli TO:// 引用较长代码段时、出现空格较大bug]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Git]]></title>
      <url>%2F2015%2F06%2F01%2Fgit%2F</url>
      <content type="text"><![CDATA[linus linus在1991年创建开源linux，几年后成立linus社区linus用了两个星期时间为自己写了一个分布式版本控制系统，并流行起来linus信仰开源精神 分支 远程仓库至少有两个分支master、dev,本地仓库至少有三个分支master、dev、mine在mine分支中开发、合并到dev分支、并推送到远程仓库 安装 Xcode 8.0以后集成 gitbrew install git 关联本地与远程仓库 在github或者coding或者其它创建仓库git clone git pull origin devgit push -u origin dev若没有关联、推送不成功、根据不成功的提示进行关联 撤销修改 撤销工作区中的修改git checkout -- filename撤销添加到暂存区中的修改git reset HEAD filenamegit checkout -- filename撤销添加到本地仓库的修改git reset --hard filename撤销上传到远程仓库的修改——&gt;远程仓库版本回退 删除文件 git rm filename 从远程仓库某分支拉取项目git pull origin master 查看当前分支git branch创建dev分支并与远程仓库dev分支关联git branch devgit push origin dev切换并创建工作分支git checkout -b mine删除本地分支devgit branch -d dev删除远程分支devgit push origin --delete dev 查看仓库当前状态git status对比文件修改前后git diff &lt;fileName&gt; 把修改文件添加到暂存区git add &lt;fileName&gt;放弃添加到暂存区git checkout -- &lt;fileName&gt; 把暂存区中内容提交到本地仓库git commit -m &quot;说明&quot; 切换到dev分支git checkout dev合并到本地仓库dev分支git merge &lt;branchName&gt;放弃合并git merge --abort 版本恢复git reset --hard &lt;commit_id&gt;git reset --hard HEAD^git reset --hard HEAD^^把本地仓库内容提交到远程仓库(推送前拉取)git push origin dev 标签: 创建标签git tag v1.0git tag -a v1.0 -m &quot;version 1.0 release&quot;为特定commit_id创建标签git tag -a v1.0 -m &quot;version 1.0 release&quot; commit_id 查看所有标签git tag查看标签下的内容git show v1.0 删除标签git tag -d v1.0git push origin :refs/tags/v1.0 推送标签git push origin v1.0git push origin --tags stash: 隐藏当前工作区内容git stash 查看隐藏工作区状态git stash list 恢复隐藏的工作区git stash applygit stash pop 其他命令: 查看历史命令git refloggit log 删除工作区文件git rm &lt;fileName&gt; 查看远程仓库信息git remote -v 参考资料廖雪峰的官方网站Git官方网站]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo]]></title>
      <url>%2F2015%2F05%2F01%2FHexo%2F</url>
      <content type="text"><![CDATA[什么是Hexo?1hexo是一个快速、简洁且高效的博客框架、支持Markdown解析与渲染文章，用Node.js编写。 安装hexo123brew install nodebrew install gitnpm install -g hexo-cli 建站123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 部署 发布123hexo cleanhexo generatehexo deploy 参考资料hexo官方网站]]></content>
    </entry>

    
  
  
</search>
